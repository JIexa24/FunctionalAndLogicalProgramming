//
(defun one(x) (append (append (last x) (butlast (cdr x)) (list (car x)))))
(defun two(x) (append (list (cadr x) (car x)) (cddr x)))
(defun three(x) (append (last (butlast x)) (cdr (butlast (butlast x))) (list (car x)) (last x)))
(defun four(x) (append (list (car x) (caddr x) (cadr x)) (cdddr x)))
(defun five(x) (append (list (car x) (cadr x)) (last x) (butlast (cdddr x)) (list (caddr x))))
(defun six(x) (append (list (caddr x) (cadr x) (car x)) (cdddr x)))
(defun seven(x) (append (list (car x)) (last x) (cddr (butlast x)) (list (car x))))
(defun eight(x) (append (butlast (butlast x)) (last x) (last (butlast x))))
(defun nine(x) (append (list (car x)) (last (butlast x)) (butlast (butlast (cddr x))) (list (cadr x)) (last x)))
(defun ten(x) (append (list (car x) (cadr x)) (last (butlast x)) (butlast (butlast (cdddr x))) (list (caddr x)) (last x)))

(princ "1:")(princ (one '(1 2 3 4 5 6 7 8 9 10)))
(terpri)
(princ "2:")(princ (two '(1 2 3 4 5 6 7 8 9 10)))
(terpri)
(princ "3:")(princ (three '(1 2 3 4 5 6 7 8 9 10)))
(terpri)
(princ "4:")(princ (four '(1 2 3 4 5 6 7 8 9 10)))
(terpri)
(princ "5:")(princ (five '(1 2 3 4 5 6 7 8 9 10)))
(terpri)
(princ "6:")(princ (six '(1 2 3 4 5 6 7 8 9 10)))
(terpri)
(princ "7:")(princ (seven '(1 2 3 4 5 6 7 8 9 10)))
(terpri)
(princ "8:")(princ (eight '(1 2 3 4 5 6 7 8 9 10)))
(terpri)
(princ "9:")(princ (nine '(1 2 3 4 5 6 7 8 9 10)))
(terpri)
(princ "10:")(princ (ten '(1 2 3 4 5 6 7 8 9 10)))
(terpri)

(bye)
